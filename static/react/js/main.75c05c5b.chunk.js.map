{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","base64_string","setBase64","className","id","src","classnames","type","onChange","event","reader","FileReader","onload","document","getElementById","result","fetch","method","cache","headers","body","JSON","stringify","split","then","response","json","res","catch","err","console","log","readAsDataURL","target","files","onClick","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sPAwDeA,MApDf,WAAgB,IAAD,EACsBC,IAAMC,SAAS,IADrC,mBACNC,EADM,KACSC,EADT,KAiCb,OACE,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKC,GAAG,GAAGD,UAAU,WAAUE,IAAKJ,MAExC,sBAAKE,UAAU,UAAf,UACI,qBAAKC,GAAG,gBACR,sBAAKD,UAAU,gBAAf,UACI,wBAAOA,UAAWG,IAAW,iCAA7B,UACI,uBAAOC,KAAK,OAAOC,SAxCd,SAACC,GACtB,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,WAEDC,SAASC,eAAe,eAC9BT,IAAMK,EAAOK,OACpBC,MAAM,UAAW,CACfC,OAAO,OACPC,MAAO,WACPC,QAAQ,CACJ,eAAe,oBAEnBC,KAAKC,KAAKC,UAAUZ,EAAOK,OAAOQ,MAAM,KAAK,MAG9CC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GAAG,OAAIzB,EAAU,0BAA4ByB,MAClDC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAGhBnB,EAAOsB,cAAcvB,EAAMwB,OAAOC,MAAM,OAgB5B,YAIA,uBAAO3B,KAAK,SAAS4B,QAlBb,WACPtB,SAASC,eAAe,eAC9BT,IAAM,GACbH,EAAU,KAe+CC,UAAWG,IAAW,WAAY8B,MAAM,oBCrCtFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASC,eAAe,SAM1BuB,M","file":"js/main.75c05c5b.chunk.js","sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\nimport './App.css'\n\nfunction App() {\n  const [base64_string, setBase64] = React.useState('')\n  const  preview_image = (event)  => {\n    var reader = new FileReader();\n    reader.onload = function()\n    {\n      var output = document.getElementById('input_image');\n      output.src = reader.result;\n      fetch(\"/result\", {\n        method:\"POST\",\n        cache: \"no-cache\",\n        headers:{\n            \"Content-type\":\"application/json\",\n        },\n        body:JSON.stringify(reader.result.split(',')[1])\n        }\n      )\n      .then(response => {\n        return response.json()\n      })  \n      .then(res => setBase64('data:image/jpeg;base64,' + res))\n      .catch(err => {\n        console.log(err)\n      })\n    }\n    reader.readAsDataURL(event.target.files[0]);\n  }\n  const onHandleClear = () => {\n    var output = document.getElementById('input_image');\n    output.src = '';\n    setBase64('')\n\n  }\n  return (\n    <div className=\"main-container\">\n        <div className=\"output-box\">\n            <img id=\"\" className=\"img-main\"src={base64_string}/>\n        </div>\n        <div className=\"wrapper\">\n            <img id=\"input_image\"/>\n            <div className=\"btn-container\">\n                <label className={classnames('custom-file-upload btn upload')} >\n                    <input type=\"file\" onChange={preview_image} />\n                    Upload\n                </label>\n                <input type=\"button\" onClick={onHandleClear} className={classnames('btn fil')} value=\"Clear\"/>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}