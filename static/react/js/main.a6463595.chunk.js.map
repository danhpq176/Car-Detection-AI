{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","base64_string","setBase64","isOpenSidebar","setIsOpenSidebar","isLoading","setIsLoading","className","onClick","document","querySelector","style","transform","right","icon","faArrowLeft","src","id","classnames","type","onChange","event","reader","FileReader","onload","getElementById","result","fetch","method","cache","headers","body","JSON","stringify","split","then","response","json","res","catch","err","console","log","readAsDataURL","target","files","class","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qQAiFeA,MA3Ef,WAAgB,IAAD,EACsBC,IAAMC,SAAS,IADrC,mBACNC,EADM,KACSC,EADT,OAE6BH,IAAMC,UAAS,GAF5C,mBAENG,EAFM,KAESC,EAFT,OAGqBL,IAAMC,UAAS,GAHpC,mBAGNK,EAHM,KAGKC,EAHL,KAoDb,OACE,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,QAfW,WACjBL,GACDM,SAASC,cAAc,mBAAmBC,MAAMC,UAAY,eAC5DH,SAASC,cAAc,YAAYC,MAAMC,UAAY,mBACrDH,SAASC,cAAc,mBAAmBC,MAAME,MAAQ,KACxDT,GAAiB,KAEjBK,SAASC,cAAc,mBAAmBC,MAAMC,UAAY,iBAC5DH,SAASC,cAAc,YAAYC,MAAMC,UAAY,iBACrDH,SAASC,cAAc,mBAAmBC,MAAME,MAAQ,MACxDT,GAAiB,KAKcG,UAAU,iBAAvC,SACE,cAAC,IAAD,CAAiBA,UAAU,OAAOO,KAAMC,QAE1C,qBAAKR,UAAU,aAAf,SACI,qBAAKA,UAAU,WAAWS,IAAKf,MAE/B,sBAAKM,UAAU,UAAf,UACI,qBAAKU,GAAG,gBACR,sBAAKV,UAAU,gBAAf,UACI,wBAAOA,UAAWW,IAAW,iCAAD,OAAkCb,EAAY,UAAY,KAAtF,UACI,uBAAOc,KAAK,OAAOC,SA5DlB,SAACC,GACtB,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,WAEdlB,GAAa,GACAG,SAASgB,eAAe,eAC9BT,IAAMM,EAAOI,OACpBC,MAAM,UAAW,CACfC,OAAO,OACPC,MAAO,WACPC,QAAQ,CACJ,eAAe,oBAEnBC,KAAKC,KAAKC,UAAUX,EAAOI,OAAOQ,MAAM,KAAK,MAG9CC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GAEJ,OADAhC,GAAa,GACNJ,EAAU,0BAA4BoC,MAE9CC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAGhBlB,EAAOqB,cAActB,EAAMuB,OAAOC,MAAM,OAkCpB,0CACCxC,EAAY,qBAAKyC,MAAM,WAAkB,QAE9C,uBAAO3B,KAAK,SAASX,QAnCjB,WACPC,SAASgB,eAAe,eAC9BT,IAAM,GACbd,EAAU,KAgCmDK,UAAWW,IAAW,WAAY6B,MAAM,oBC9D1FC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjD,SAASgB,eAAe,SAM1BuB,M","file":"js/main.a6463595.chunk.js","sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport './App.css'\n\nfunction App() {\n  const [base64_string, setBase64] = React.useState('')\n  const [isOpenSidebar, setIsOpenSidebar] = React.useState(true)\n  const [isLoading, setIsLoading] = React.useState(false)\n  const  preview_image = (event)  => {\n    var reader = new FileReader();\n    reader.onload = function()\n    {\n      setIsLoading(true)\n      var output = document.getElementById('input_image');\n      output.src = reader.result;\n      fetch(\"/result\", {\n        method:\"POST\",\n        cache: \"no-cache\",\n        headers:{\n            \"Content-type\":\"application/json\",\n        },\n        body:JSON.stringify(reader.result.split(',')[1])\n        }\n      )\n      .then(response => {\n        return response.json()\n      })  \n      .then(res => {\n        setIsLoading(true)\n        return setBase64('data:image/jpeg;base64,' + res)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    }\n    reader.readAsDataURL(event.target.files[0]);\n  }\n  const onHandleClear = () => {\n    var output = document.getElementById('input_image');\n    output.src = '';\n    setBase64('')\n\n  }\n  const onOpenSidebar = () => {\n    if(isOpenSidebar) {\n      document.querySelector(\".icon-container\").style.transform = \"rotate(0deg)\"\n      document.querySelector(\".wrapper\").style.transform = \"translateX(100%)\"\n      document.querySelector(\".icon-container\").style.right = \"2%\"\n      setIsOpenSidebar(false)\n    } else {\n      document.querySelector(\".icon-container\").style.transform = \"rotate(180deg)\"\n      document.querySelector(\".wrapper\").style.transform = \"translateX(0%)\"\n      document.querySelector(\".icon-container\").style.right = \"42%\"\n      setIsOpenSidebar(true)\n    }\n  }\n  return (\n    <div className=\"main-container\">\n        <div onClick={onOpenSidebar} className=\"icon-container\">\n          <FontAwesomeIcon className=\"icon\" icon={faArrowLeft}/>\n        </div>\n        <div className=\"output-box\">\n            <img className=\"img-main\" src={base64_string}/>\n        </div>\n            <div className=\"wrapper\">\n                <img id=\"input_image\"/>\n                <div className=\"btn-container\">\n                    <label className={classnames(`custom-file-upload btn upload ${isLoading ? 'loading' : ''}`)} >\n                        <input type=\"file\" onChange={preview_image} />\n                        <span>Upload</span>\n                        {isLoading ? <div class=\"loader\"></div> : null}\n                    </label>\n                    <input type=\"button\" onClick={onHandleClear} className={classnames('btn fil')} value=\"Clear\"/>\n                </div>\n            </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}