{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","base64_string","setBase64","class","id","src","alt","type","onChange","event","reader","FileReader","onload","document","getElementById","result","fetch","method","cache","headers","body","JSON","stringify","then","response","json","res","catch","err","console","log","readAsDataURL","target","files","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sOAiDeA,MA9Cf,WAAgB,IAAD,EACsBC,IAAMC,SAAS,IADrC,mBACNC,EADM,KACSC,EADT,KA2Bb,OACE,sBAAKC,MAAM,iBAAX,UACI,qBAAKA,MAAM,aAAX,SACI,qBAAKC,GAAG,GAAGC,IAAKJ,EAAeK,IAAI,OAEvC,sBAAKH,MAAM,UAAX,UACI,qBAAKC,GAAG,gBACR,sBAAKD,MAAM,gBAAX,UACI,wBAAOA,MAAM,gCAAb,UACI,uBAAOI,KAAK,OAAOC,SAlCd,SAACC,GACtB,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,WAEDC,SAASC,eAAe,eAC9BT,IAAMK,EAAOK,OACpBC,MAAM,UAAW,CACfC,OAAO,OACPC,MAAO,WACPC,QAAQ,CACJ,eAAe,oBAEnBC,KAAKC,KAAKC,UAAUZ,EAAOK,UAG5BQ,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GAAG,OAAIxB,EAAU,0BAA4BwB,MAClDC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAGhBlB,EAAOqB,cAActB,EAAMuB,OAAOC,MAAM,OAU5B,YAIA,uBAAO1B,KAAK,SAASJ,MAAM,UAAU+B,MAAM,qBC9B5CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASC,eAAe,SAM1BqB,M","file":"js/main.3bbb0a8c.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\n\nfunction App() {\n  const [base64_string, setBase64] = React.useState('')\n  const  preview_image = (event)  => {\n    var reader = new FileReader();\n    reader.onload = function()\n    {\n      var output = document.getElementById('input_image');\n      output.src = reader.result;\n      fetch(\"/result\", {\n        method:\"POST\",\n        cache: \"no-cache\",\n        headers:{\n            \"Content-type\":\"application/json\",\n        },\n        body:JSON.stringify(reader.result)\n        }\n      )\n      .then(response => {\n        return response.json()\n      })  \n      .then(res => setBase64('data:image/jpeg;base64,' + res))\n      .catch(err => {\n        console.log(err)\n      })\n    }\n    reader.readAsDataURL(event.target.files[0]);\n  }\n  return (\n    <div class=\"main-container\">\n        <div class=\"output-box\">\n            <img id=\"\" src={base64_string} alt=\"\"/>\n        </div>\n        <div class=\"wrapper\">\n            <img id=\"input_image\"/>\n            <div class=\"btn-container\">\n                <label class=\"custom-file-upload btn upload\" >\n                    <input type=\"file\" onChange={preview_image} />\n                    Upload\n                </label>\n                <input type=\"button\" class=\"btn fil\" value=\"Filter\"/>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}